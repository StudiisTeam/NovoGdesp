// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id                            String                          @id @default(uuid())
  title                         String
  accountable                   String?
  acronym                       String?
  color                         String
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @default(now()) @updatedAt
  BiddingProcessesOnDepartments BiddingProcessesOnDepartments[]
}

model Modality {
  id             Int              @id @default(autoincrement())
  name           String
  BiddingProcess BiddingProcess[]
}

model BiddingProcess {
  id                            String                          @id @default(uuid())
  processIdentifier             String                          @unique
  processNumber                 String                          @unique
  processYear                   Int
  modalityId                    Int
  callingInstrument             String
  object                        String
  executionRegime               String
  guarantee                     Boolean
  agreement                     Boolean
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @default(now()) @updatedAt
  modality                      Modality                        @relation(fields: [modalityId], references: [id])
  BiddingProcessesOnDepartments BiddingProcessesOnDepartments[]
}

model BiddingProcessesOnDepartments {
  biddingProcessId String
  departmentId     String
  BiddingProcess   BiddingProcess @relation(fields: [biddingProcessId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  Department       Department     @relation(fields: [departmentId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@id([biddingProcessId, departmentId])
}

model HiredLegalPerson {
  id            String   @id @default(uuid())
  corporateName String   @unique
  cnpj          String   @unique
  address       String?
  phone         String?
  email         String?
  color         String
  acronym       String
  codeBank      Int?
  nameBank      String?
  agencyBank    Int?
  accountBank   String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
}

model HiredPhysicalPerson {
  id          String   @id @default(uuid())
  aname       String   @unique
  cpf         String   @unique
  address     String?
  phone       String?
  email       String?
  color       String
  acronym     String
  codeBank    Int?
  nameBank    String?
  agencyBank  Int?
  accountBank String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}
