// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id                            String                          @id @default(uuid())
  title                         String
  accountable                   String?
  acronym                       String?
  color                         String
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @default(now()) @updatedAt
  deletedAt                     DateTime?
  BiddingProcessesOnDepartments BiddingProcessesOnDepartments[]
  PriceRegistrationProtocol     PriceRegistrationProtocol[]
}

model Modality {
  id             Int              @id @default(autoincrement())
  name           String
  deletedAt      DateTime?
  BiddingProcess BiddingProcess[]
}

model BiddingProcess {
  id                            String                          @id @default(uuid())
  processIdentifier             String                          @unique
  processNumber                 String                          @unique
  processYear                   Int
  modalityId                    Int
  callingInstrument             String
  object                        String
  executionRegime               String
  guarantee                     Boolean
  agreement                     Boolean
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @default(now()) @updatedAt
  modality                      Modality                        @relation(fields: [modalityId], references: [id])
  deletedAt                     DateTime?
  BiddingProcessesOnDepartments BiddingProcessesOnDepartments[]
  PriceRegistrationProtocol     PriceRegistrationProtocol[]
}

model BiddingProcessesOnDepartments {
  biddingProcessId String
  departmentId     String
  BiddingProcess   BiddingProcess @relation(fields: [biddingProcessId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  Department       Department     @relation(fields: [departmentId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@id([biddingProcessId, departmentId])
}

model HiredLegalPerson {
  id                        String                      @id @default(uuid())
  corporateName             String                      @unique
  cnpj                      String                      @unique
  address                   String?
  phone                     String?
  email                     String?
  color                     String
  acronym                   String
  codeBank                  Int?
  nameBank                  String?
  agencyBank                Int?
  accountBank               String?
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @default(now()) @updatedAt
  deletedAt                 DateTime?
  PriceRegistrationProtocol PriceRegistrationProtocol[]
}

model HiredPhysicalPerson {
  id                        String                      @id @default(uuid())
  name                      String                      @unique
  cpf                       String                      @unique
  address                   String?
  phone                     String?
  email                     String?
  color                     String
  acronym                   String
  codeBank                  Int?
  nameBank                  String?
  agencyBank                Int?
  accountBank               String?
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @default(now()) @updatedAt
  deletedAt                 DateTime?
  PriceRegistrationProtocol PriceRegistrationProtocol[]
}

enum PriceRegistrationProtocolStatus {
  INUSE
  UNUSED
  CANCELED
}

model PriceRegistrationProtocol {
  id                  String                          @id @default(uuid())
  protocolIdentifier  String                          @unique
  protocolYear        Int
  signatureDate       DateTime
  initialDate         DateTime
  endDate             DateTime
  totalAmountProtocol Float
  contractPaymentTerm String
  status              PriceRegistrationProtocolStatus @default(UNUSED)
  createdAt           DateTime                        @default(now())
  updatedAt           DateTime                        @default(now()) @updatedAt
  deletedAt           DateTime?

  biddingProcess                BiddingProcess                  @relation(fields: [biddingProcessId], references: [id])
  biddingProcessId              String
  hiredPhyscalPerson            HiredPhysicalPerson?            @relation(fields: [hiredPhysicalPersonId], references: [id])
  hiredPhysicalPersonId         String?
  hiredLegalPerson              HiredLegalPerson?               @relation(fields: [hiredLegalPersonId], references: [id])
  hiredLegalPersonId            String?
  deparment                     Department                      @relation(fields: [departmentId], references: [id])
  departmentId                  String
  PriceRegistrationProtocolItem PriceRegistrationProtocolItem[]
}

model PriceRegistrationProtocolItem {
  id                          String                    @id @default(uuid())
  specification               String
  observation                 String
  brand                       String
  unity                       String
  amount                      Int
  value                       Float
  priceRegistrationProtocol   PriceRegistrationProtocol @relation(fields: [priceRegistrationProtocolId], references: [id])
  priceRegistrationProtocolId String
}
